
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDpswHcF-6hQRysnIaTEdls4l8ATwq4x88"></script>

<head>
    <title>Bootstrap Example</title>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">

</head>

@*To do list:
1. Partial View for map and directions, use a controller method to generate lon and lat values for map centre 
2. Week71
3. JQuery 
4. LINQ*@

<body>

    <div class="jumbotron">
        <h1 style="color: #3399ff; text-align: center; font-size: 130px;" 1>Route Planner</h1>
        <h2 style="text-align:center;">Get from <span style="font-weight:bold; color:#00bfff;font-weight:bold">A</span> to <span style="color:#33ff33;font-weight:bold">B</span> without the hastle</h2>
        <h3 style="text-align:center; color:#ff3333"><del>No more struggling with maps</del></h3>

    </div>
    <div class="row">
        <div class="col-md-4">
            <h2 style="color:#33ff33; font-weight:bold" title="Select the start location for your journey from the list below">Starting Point</h2>
            <select class="form-control" id="lstStart">
                <option value="Halifax, NS">Halifax, NS</option>
                <option value="Boston, MA">Boston, MA</option>
                <option value="New York, NY">New York, NY</option>
                <option value="Miami, FL">Miami, FL</option>
            </select>
        </div>

        <div class="col-md-4">
            <h2 style="color:#ffcc00;font-weight:bold" title="You can use waypoints to calculate routes through additional locations">Waypoints</h2>
            <i style="opacity: 0.7">(Ctrl-Click for multiple selection)</i>
            <br>
            <select multiple class="form-control" id="waypoints">
                <option value="montreal, quebec">Montreal, QBC</option>
                <option value="toronto, ont">Toronto, ONT</option>
                <option value="chicago, il">Chicago</option>
                <option value="winnipeg, mb">Winnipeg</option>
                <option value="fargo, nd">Fargo</option>
                <option value="calgary, ab">Calgary</option>
                <option value="spokane, wa">Spokane</option>
            </select>
        </div>

        <div class="col-md-4">
            <h2 style="color:#ff3333; font-weight:bold" title="Select the end location of your journey from the list below">End Point</h2>
            <select class="form-control" id="lstEnd">
                <option value="Vancouver, BC">Vancouver, BC</option>
                <option value="Seattle, WA">Seattle, WA</option>
                <option value="San Francisco, CA">San Francisco, CA</option>
                <option value="Los Angeles, CA">Los Angeles, CA</option>
            </select>
        </div>
    </div>

    <br />
    <br />

    <div style=" text-align: center;">
        @*<input type="submit" id="submit" class="btn btn-success" style="position: absolute;">*@
        <button onclick="myFunction()" class="btn btn-success" >Get Directions</button>
    </div>

    <br />
    <br />


    <div style="width: 600px;">
        <div id="map" style="width: 280px; height: 400px; float: left;"></div>
        <div id="panel" style="width: 300px; float: right;"></div>
    </div>

</body>

<script type="text/javascript">
    function myFunction() {

        var directionsService = new google.maps.DirectionsService();
        var directionsDisplay = new google.maps.DirectionsRenderer();

        //Get start and End points that the user selected
        var startLocation = document.getElementById('lstStart').value;
        var endLocation = document.getElementById('lstEnd').value;

        var map = new google.maps.Map(document.getElementById('map'), {
            zoom: 7,
            mapTypeId: google.maps.MapTypeId.ROADMAP
        });

        directionsDisplay.setMap(map);
        directionsDisplay.setPanel(document.getElementById('panel'));

        var request = {
            origin: startLocation,
            destination: endLocation,
            travelMode: google.maps.DirectionsTravelMode.DRIVING
        };

        directionsService.route(request, function (response, status) {
            if (status == google.maps.DirectionsStatus.OK) {
                directionsDisplay.setDirections(response);
            }
        });
    }
</script> 


    @*<script>
        function myFunction() {

            // Array of stylin for map
            var styles = [
              {
                  stylers: [
                    { hue: "#b3ccff" },
                    { saturation: -30 }
                  ]
              },
              //Road Labels
              {
                  featureType: "road",
                  elementType: "labels",
                  stylers: [
                    { visibility: "on" }
                  ]
              },
              //Road Geometry
              {
                  featureType: "road",
                  elementType: "geometry",
                  stylers: [
                    { lightness: 100 },
                    { visibility: "simplified" }
                  ]
              }
            ];

            var styledMap = new google.maps.StyledMapType(styles,
              { name: "Styled Map" });

            //Get center using longitude and latitude passed back from controller
            var center = new google.maps.LatLng(41.85, -87.65);

            //Specify Map Options
            var mapOptions = {
                zoom: 6, //Map Zoom Level
                center: center, //Set Map center point
                mapTypeControlOptions: {
                    mapTypeIds: [google.maps.MapTypeId.ROADMAP, 'map_style']
                }
            };

            //Assign Map to div
            var map = new google.maps.Map(document.getElementById('googleMap'),
              mapOptions);

            var marker = new google.maps.Marker({
                position: center,
                map: map
            })

            map.mapTypes.set('map_style', styledMap);
            map.setMapTypeId('map_style');

            // google.maps.event.addDomListener(window, "load", initialize);
        }
    </script>*@



    @*<script>
            function initMap() {
                var directionsService = new google.maps.DirectionsService;
                var directionsDisplay = new google.maps.DirectionsRenderer;
                var map = new google.maps.Map(document.getElementById('map'), {
                    zoom: 6,
                    center: { lat: 41.85, lng: -87.65 }
                });
                directionsDisplay.setMap(map);

                document.getElementById('submit').addEventListener('click', function () {
                    calculateAndDisplayRoute(directionsService, directionsDisplay);
                });
            }

            function calculateAndDisplayRoute(directionsService, directionsDisplay) {
                var waypts = [];
                var checkboxArray = document.getElementById('waypoints');
                for (var i = 0; i < checkboxArray.length; i++) {
                    if (checkboxArray.options[i].selected) {
                        waypts.push({
                            location: checkboxArray[i].value,
                            stopover: true
                        });
                    }
                }

                directionsService.route({
                    origin: document.getElementById('start').value,
                    destination: document.getElementById('end').value,
                    waypoints: waypts,
                    optimizeWaypoints: true,
                    travelMode: google.maps.TravelMode.DRIVING
                }, function (response, status) {
                    if (status === google.maps.DirectionsStatus.OK) {
                        directionsDisplay.setDirections(response);
                        var route = response.routes[0];
                        var summaryPanel = document.getElementById('directions-panel');
                        summaryPanel.innerHTML = '';
                        // For each route, display summary information.
                        for (var i = 0; i < route.legs.length; i++) {
                            var routeSegment = i + 1;
                            summaryPanel.innerHTML += '<b>Route Segment: ' + routeSegment +
                                '</b><br>';
                            summaryPanel.innerHTML += route.legs[i].start_address + ' to ';
                            summaryPanel.innerHTML += route.legs[i].end_address + '<br>';
                            summaryPanel.innerHTML += route.legs[i].distance.text + '<br><br>';
                        }
                    } else {
                        window.alert('Directions request failed due to ' + status);
                    }
                });
            }
        </script>*@


